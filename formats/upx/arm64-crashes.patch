From: Robert Luberda <robert@debian.org>
Date: Fri, 5 Jun 2020 11:51:20 +0200
Subject: Fix crashes on arm64

Revert the following upstream commit:

> commit d4e2d7e8a80e0e3d95e17bbc0bcf649bad3da19a
> Author: John Reiser <jreiser@BitWagon.com>
> Date:   Fri Mar 1 20:31:41 2019 -0800
>
>    arm64 (aarch64) and PAGE_SIZE > 4KiB
>
>    Future: use prctl(PR_SET_MM, PR_SET_MM_START_BRK, addr)
>    https://github.com/upx/upx/issues/254
>           modified:   p_lx_elf.cpp
>            modified:   stub/src/amd64-linux.elf-main.c

Reverting the commit should fix crashes visible on arm, even though
according to upstream authors,a bug is in Linux kernel, see
https://github.com/upx/upx/issues/351

Bugs-Debian: https://bugs.debian.org/955157
---
 src/p_lx_elf.cpp                    | 2 +-
 src/stub/src/amd64-linux.elf-main.c | 4 +---
 2 files changed, 2 insertions(+), 4 deletions(-)

diff --git a/src/p_lx_elf.cpp b/src/p_lx_elf.cpp
index c03d6ee..91926af 100644
--- a/src/p_lx_elf.cpp
+++ b/src/p_lx_elf.cpp
@@ -523,7 +523,7 @@ off_t PackLinuxElf64::pack3(OutputFile *fo, Filter &ft)
         // So: pretend 4KiB pages.
         upx_uint64_t const pm = (
                Elf64_Ehdr::EM_X86_64 ==e_machine
-            //|| Elf64_Ehdr::EM_AARCH64==e_machine
+            || Elf64_Ehdr::EM_AARCH64==e_machine
             //|| Elf64_Ehdr::EM_PPC64  ==e_machine  /* DOES NOT WORK! */
             )
             ? ((~(upx_uint64_t)0)<<12)
diff --git a/src/stub/src/amd64-linux.elf-main.c b/src/stub/src/amd64-linux.elf-main.c
index 4e3e05f..7c42e51 100644
--- a/src/stub/src/amd64-linux.elf-main.c
+++ b/src/stub/src/amd64-linux.elf-main.c
@@ -433,9 +433,7 @@ xfind_pages(unsigned mflags, Elf64_Phdr const *phdr, int phnum,
         }
     }
     DPRINTF("  addr=%%p  lo=%%p  hi=%%p\\n", addr, lo, hi);
-    // PROT_WRITE allows testing of 64k pages on 4k Linux
-    addr = (Elf64_Addr)mmap((void *)addr, hi, (DEBUG ? PROT_WRITE : PROT_NONE),  // FIXME XXX EVIL
-        mflags, -1, 0);
+    addr = (Elf64_Addr)mmap((void *)addr, hi, PROT_NONE, mflags, -1, 0);
     DPRINTF("  addr=%%p\\n", addr);
     *p_brk = hi + addr;  // the logical value of brk(0)
     return (Elf64_Addr)(addr - lo);
